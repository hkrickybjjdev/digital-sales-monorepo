meta {
  name: Refresh Token
  type: http
  seq: 3
}

post {
  url: {{baseUrl}}/api/v1/auth/refresh-token
  body: json
  auth: none
}

headers {
  Content-Type: application/json
  Authorization: Bearer {{authToken}}
}

body:json {
  {
    "refreshToken": "{{refreshToken}}"
  }
}

script:post-response {
  // Update the token in a variable for later use
  if (res.status === 200 && res.body.token) {
    bru.setVar("authToken", res.body.token);
    
    // If a new refresh token is provided, update it as well
    if (res.body.refreshToken) {
      bru.setVar("refreshToken", res.body.refreshToken);
    }
    
    console.log("Tokens refreshed successfully");
  }
}

tests {
  test("Status code should be 200", function() {
    expect(res.status).to.equal(200);
  });
  
  test("Response should have a new token", function() {
    expect(res.body.token).to.be.a('string');
    expect(res.body.token.length).to.be.greaterThan(10);
  });
  
  test("Response should have a refresh token", function() {
    expect(res.body.refreshToken).to.be.a('string');
  });
}
